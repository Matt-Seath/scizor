version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:15
    container_name: scizor-postgres
    environment:
      POSTGRES_DB: scizor
      POSTGRES_USER: scizor_user
      POSTGRES_PASSWORD: scizor_password
    ports:
      - "5432:5432"  # Use standard PostgreSQL port
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - scizor-network

  redis:
    image: redis:7-alpine
    container_name: scizor-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - scizor-network

  # Core Services
  data-farmer:
    build:
      context: .
      dockerfile: services/data-farmer/Dockerfile
    container_name: scizor-data-farmer
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://scizor_user:scizor_password@postgres:5432/scizor
      - REDIS_URL=redis://redis:6379/0
      - IBKR_HOST=host.docker.internal
      - IBKR_PORT=7497
      - IBKR_CLIENT_ID=1
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - scizor-network
    restart: unless-stopped

  backtester:
    build:
      context: .
      dockerfile: services/backtester/Dockerfile
    container_name: scizor-backtester
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://scizor_user:scizor_password@postgres:5432/scizor
      - REDIS_URL=redis://redis:6379/0
      - DATA_FARMER_URL=http://data-farmer:8000
    depends_on:
      - postgres
      - redis
      - data-farmer
    volumes:
      - ./logs:/app/logs
    networks:
      - scizor-network
    restart: unless-stopped

  algo-trader:
    build:
      context: .
      dockerfile: services/algo-trader/Dockerfile
    container_name: scizor-algo-trader
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=postgresql://scizor_user:scizor_password@postgres:5432/scizor
      - REDIS_URL=redis://redis:6379/0
      - DATA_FARMER_URL=http://data-farmer:8000
      - BACKTESTER_URL=http://backtester:8001
      - IBKR_HOST=host.docker.internal
      - IBKR_PORT=7497
      - IBKR_CLIENT_ID=2
    depends_on:
      - postgres
      - redis
      - data-farmer
      - backtester
    volumes:
      - ./logs:/app/logs
    networks:
      - scizor-network
    restart: unless-stopped

  # Monitoring (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: scizor-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - scizor-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: scizor-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - scizor-network
    profiles:
      - monitoring

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  scizor-network:
    driver: bridge
